@using Microsoft.JSInterop
@inject IJSRuntime Js

<div class="popover" id="popover-@Guid">
    <div class="activator" style="display: inline;">
        @Activator
    </div>

    <div class="content @Placement" role="tooltip" style="@(_isVisible ? "display: block;" : "display: none;")">
        @Content
    </div>
</div>



@code
{
    [Parameter]
    public RenderFragment Activator { get; set; }

    [Parameter]
    public RenderFragment Content { get; set; }

    [Parameter]
    public Placement Placement { get; set; } = Placement.Auto;

    private bool _isVisible;

    private Guid Guid { get; } = Guid.NewGuid();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await Js.InvokeVoidAsync("Bui.popper", $"#popover-{Guid} > .activator",
            $"#popover-{Guid} > .content", Placement.ToString());
    }

    public bool IsOpen => _isVisible;
    public bool IsClosed => !IsOpen;

    public void Hide()
    {
        _isVisible = false;
    }

    public void Show()
    {
        _isVisible = true;
    }

    public void Toggle()
    {
        _isVisible = !_isVisible;
    }
}
